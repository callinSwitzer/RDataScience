geom_tiplab() +
geom_nodepoint() +
ggplot2::xlim(0, 500)
p4
p4  <- ggtree(j_birds, aes(color=branch.length)) +
geom_text2(aes(subset=!isTip, label=node), hjust=-.3) +
geom_tiplab() +
geom_nodepoint() +
ggplot2::xlim(0, 5000)
p4
p4  <- ggtree(j_birds, aes(color=branch.length)) +
geom_text2(aes(subset=!isTip, label=node), hjust=-.3) +
geom_tiplab() +
geom_nodepoint() +
ggplot2::xlim(0, 100)
p4
p4  <- ggtree(j_birds, aes(color=branch.length)) +
geom_text2(aes(subset=!isTip, label=node), hjust=-.3) +
geom_tiplab() +
geom_nodepoint() +
ggplot2::xlim(0, 50)
p4
p4  <- ggtree(j_birds, aes(color=branch.length)) +
geom_text2(aes(subset=!isTip, label=node), hjust=-.3) +
geom_tiplab() +
geom_nodepoint() +
ggplot2::xlim(0, 20)
p4
p4  <- ggtree(j_birds, aes(color=branch.length)) +
geom_text2(aes(subset=!isTip, label=node), hjust=-.3) +
geom_tiplab() +
geom_nodepoint() +
ggplot2::xlim(0, 20) +
scale_color_continuous(low = 'blue', high = 'red')
p4
p4  <- ggtree(j_birds) +
geom_text2(aes(subset=!isTip, label=node), hjust=-.3) +
geom_tiplab() +
geom_nodepoint() +
ggplot2::xlim(0, 20)
p4
p4 %>% rotate(p4, 54)
rotate(p4, 54)
rotate(p4, 55)
p4
rotate(p4, 49)
p4
rotate(p4, 49)
p4
rotate(p4, 91)
p4  <- ggtree(j_birds) +
geom_text2(aes(subset=!isTip, label=node), hjust=-.3) +
geom_tiplab() +
#geom_nodepoint() +
ggplot2::xlim(0, 20)
p4
ggtree(j_birds)
p4  <- ggtree(j_birds) +
geom_text2(aes(subset=!isTip, label=node), hjust=-.3) +
geom_tiplab() +
geom_label(aes(label=node.labels)) +
#geom_nodepoint() +
ggplot2::xlim(0, 20)
p4
j_birds$node.labels
p4  <- ggtree(j_birds) +
geom_text2(aes(subset=!isTip, label=node), hjust=-.3) +
geom_tiplab() +
geom_label(aes(label=j_birds$node.label)) +
#geom_nodepoint() +
ggplot2::xlim(0, 20)
p4
p4  <- ggtree(j_birds) +
geom_text2(aes(subset=!isTip, label=node), hjust=-.3) +
geom_tiplab() +
geom_label(aes(label=node.label)) +
#geom_nodepoint() +
ggplot2::xlim(0, 20)
p4
p4  <- ggtree(j_birds) +
geom_text2(aes(subset=!isTip, label=node), hjust=-.3) +
geom_tiplab() +
#geom_label(aes(label=node.label)) +
geom_nodepoint() +
ggplot2::xlim(0, 20)
p4
galliformeds <- tips(j_birds, node = 51)
galliformeds
galliformes <- tips(j_birds, node = 51)
galliformes
birds_pruned  = drop.tip(j_birds, galliformes)
plot(birds_pruned)
plot(birds_pruned, cex = 0.5)
nodelabels(cex = 0.3)
bird_subtree <- extract.clade(j_birds, node = 53)
plot(bird_subtree, cex = 0.5)
ggplot(bird_subtree) +
geom_text(aes(x=branch, label=node.label, vjust=-.5))
bird_subtree$node.label
bird_subtree
galliformes.node <- getMRCA(j_birds, galliformes)
galliformes.node <- getMRCA(j_birds, galliformes)
galliformes.node
p4  <- ggtree(j_birds) +
geom_text2(aes(subset=!isTip, label=node), hjust=-.3) +
#geom_tiplab() +
geom_text2(aes(subset = !isTip, label=label), color = 'red') +
#geom_label(aes(label=node.label)) +
#geom_nodepoint() +
ggplot2::xlim(0, 20)
p4
p4  <- ggtree(j_birds) +
# label node numbers
#geom_text2(aes(subset=!isTip, label=node), hjust=-.3) +
#geom_tiplab() +
# label node labels
geom_text2(aes(subset = !isTip, label=label), color = 'red',hjust=-.3) +
#geom_label(aes(label=node.label)) +
#geom_nodepoint() +
ggplot2::xlim(0, 20)
p4
p4  <- ggtree(j_birds) +
# label node numbers
#geom_text2(aes(subset=!isTip, label=node), hjust=-.3) +
geom_tiplab() +
# label node labels
geom_text2(aes(subset = !isTip, label=label), color = 'blue',hjust=-.2) +
#geom_nodepoint() +
ggplot2::xlim(0, 20)
p4
which.edge(j_birds, galliformes)
summary(j_birds)
mode(j_birds)
attr(j_birds)
j_birds$edge
j_birds$edge.length = rep(1, length(j_birds$edge[,1])) # first add edge lengths to tree
str(j_birds)
ggplot(bird_subtree) +
geom_text(aes(x=branch, label=node.label, vjust=-.5))
ggplot(j_birds) +
geom_text(aes(x=branch, label=node.label, vjust=-.5))
ggplot(j_birds)
ggtree(j_birds)
ggplot(bird_subtree) +
geom_text(aes(x=branch, label=node.label, vjust=-.5))
ggtree(bird_subtree) +
geom_text(aes(x=branch, label=node.label, vjust=-.5))
ggtree(j_birds)
Ntip(j_birds)
which(as.numeric(j_birds$node.label) < 90
which(as.numeric(j_birds$node.label) < 90)
which(as.numeric(j_birds$node.label) < 90)
which(as.numeric(j_birds$node.label) < 90) + Ntip(j_birds)
p5  <- ggtree(j_birds) +
geom_tiplab() +
geom_text2(aes(subset = !isTip, label=label), color = 'blue',hjust=-.2) +
ggplot2::xlim(0, 20)
p5
nodes_to_collapse <- which(as.numeric(j_birds$node.label) < 90) + Ntip(j_birds)
nodes_to_collapse
head(j_birds$edge)
edges_to_collapse <- which(j_birds$edge[, 2]) %in% nodes_to_collapse
edges_to_collapse <- which(j_birds$edge[, 2] %in% nodes_to_collapse)
edges_to_collapse
j_birds$edge[edges_to_collapse, ]
nodes_to_collapse
j_birds$edge.length[edges_to_collapse] = 0
p6  <- ggtree(j_birds) +
geom_tiplab() +
geom_text2(aes(subset = !isTip, label=label), color = 'blue',hjust=-.2) +
ggplot2::xlim(0, 20)
p6
plot(j_birds)
plot(j_birds, cex = 0.3)
p6  <- ggtree(j_birds) +
geom_tiplab() +
geom_text2(aes(subset = !isTip, label=label), color = 'blue',hjust=-.2) +
ggplot2::xlim(0, 20)
p6
j_birds_coll = di2multi(j_birds)
j_birds_coll$edge.length = NULL
p6  <- ggtree(j_birds_coll) +
geom_tiplab() +
geom_text2(aes(subset = !isTip, label=label), color = 'blue',hjust=-.2) +
ggplot2::xlim(0, 20)
p6
plot(j_birds_coll, cex = 0.3)
landbirds <- tips(j_birds, node = 63)
landbirds
landbirds <- tips(j_birds, node = 61)
landbirds
plot(j_birds)
nodelabels()
landbirds <- tips(j_birds, node = 71)
landbirds
landbird.node <- getMRCA(j_birds, landbirds)
landbird.node
which.edge(j_birds, landbird.node)
j_birds_coll$edge.length = rep(1, length(j_birds_coll$edge[,1])) # first add edge lengths to tree
str(j_birds)
str(j_birds_coll)
p5  <- ggtree(j_birds_coll) +
geom_tiplab() +
geom_text2(aes(subset = !isTip, label=label), color = 'blue',hjust=-.2) +
ggplot2::xlim(0, 20)
p5
j_birds_coll$node.label
j_birds_coll$edge
bird_subtree <- extract.clade(j_birds, node = landbird.node)
plot(bird_subtree, cex = 0.5)
j_tent <- read.tree("http://software.rc.fas.harvard.edu/workshops/TENT.ExaMLL.tre")
j_tent <- read.table("http://software.rc.fas.harvard.edu/ngsdata/workshops/TENT.ExaMLL.tre")
j_tent <- read.tree("http://software.rc.fas.harvard.edu/ngsdata/workshops/TENT.ExaML.tre")
plot(j_tent)
j_tent_root <- root(j_tent, outgroup = c("Common Ostrich", "White-throated_tinamou"))
j_tent$tip.label
j_tent_root <- root(j_tent, outgroup = c("Common_Ostrich", "White-throated_tinamou"))
j_tent <- read.tree("http://software.rc.fas.harvard.edu/ngsdata/workshops/TENT.ExaML.tre")
plot(j_tent)
j_tent$tip.label
j_tent_root <- root(j_tent, outgroup = c("Common_Ostrich", "White-throated_tinamou"))
j_tent_root <- root(j_tent, outgroup = c("Common_ostrich", "White-throated_tinamou"))
plot(j_tent)
plot(j_tent_root)
add.scale.bar()
add.scale.bar(ask = TRUE)
plot(j_tent_root)
add.scale.bar(ask = TRUE)
plot(j_tent_root, cex = 0.5, use.edge.length = F)
plot(j_tent_root, cex = 0.5, use.edge.length = F, node.depth = 2)
low_support_nodes = which(as.numeric(j_tent_root$node.label) < 100) + Ntip(j_tent_root)
low_support_nodes
nodelabels(text = j_tent_root$node.label)
plot(j_tent_root, cex = 0.5, use.edge.length = F, node.depth = 2)
j_tent_root$node.label
low_support_nodes = which(as.numeric(j_tent_root$node.label) < 100)
nodelabels(text = j_tent_root$node.label[low_support_nodes])
plot(j_tent_root, cex = 0.5, use.edge.length = F, node.depth = 2)
low_support_nodes = which(as.numeric(j_tent_root$node.label) < 100)
nodelabels(text = j_tent_root$node.label[low_support_nodes], node = low_support_nodes)
nodelabels(text = j_tent_root$node.label[low_support_nodes],
node = low_support_nodes,
cex = 0.5,
frame = 'n')
plot(j_tent_root, cex = 0.5, use.edge.length = F, node.depth = 2)
low_support_nodes = which(as.numeric(j_tent_root$node.label) < 100)
nodelabels(text = j_tent_root$node.label[low_support_nodes],
node = low_support_nodes,
cex = 0.5,
frame = 'n')
plot(j_tent_root, cex = 0.5, use.edge.length = F, node.depth = 2)
low_support_nodes = which(as.numeric(j_tent_root$node.label) < 100)
nodelabels(text = j_tent_root$node.label)
plot(j_tent_root, cex = 0.5, use.edge.length = F, node.depth = 2)
low_support_nodes = which(as.numeric(j_tent_root$node.label) < 100)
low_support_nodes
nodelabels(text = j_tent_root$node.label[low_support_nodes],
node = low_support_nodes + Ntip(j_tent_root),
cex = 0.5,
frame = 'n')
plot(j_tent_root, cex = 0.5, use.edge.length = F, node.depth = 2)
low_support_nodes = which(as.numeric(j_tent_root$node.label) < 100)
nodelabels(text = j_tent_root$node.label[low_support_nodes],
node = low_support_nodes + Ntip(j_tent_root),
cex = 0.5,
frame = 'n',
adj = c(0.3, 0.3))
plot(j_tent_root, cex = 0.5, use.edge.length = F, node.depth = 2)
low_support_nodes = which(as.numeric(j_tent_root$node.label) < 100)
nodelabels(text = j_tent_root$node.label[low_support_nodes],
node = low_support_nodes + Ntip(j_tent_root),
cex = 0.5,
frame = 'n',
adj = c(1, 0.3))
plot(j_tent_root, cex = 0.5, use.edge.length = F, node.depth = 2)
low_support_nodes = which(as.numeric(j_tent_root$node.label) < 100)
nodelabels(text = j_tent_root$node.label[low_support_nodes],
node = low_support_nodes + Ntip(j_tent_root),
cex = 0.5,
frame = 'n',
adj = c(1, 0.1))
plot(j_tent_root, cex = 0.5, use.edge.length = F, node.depth = 2)
low_support_nodes = which(as.numeric(j_tent_root$node.label) < 100)
nodelabels(text = j_tent_root$node.label[low_support_nodes],
node = low_support_nodes + Ntip(j_tent_root),
cex = 0.5,
frame = 'n',
adj = c(1, 1))
plot(j_tent_root, cex = 0.5, use.edge.length = F, node.depth = 2)
low_support_nodes = which(as.numeric(j_tent_root$node.label) < 100)
nodelabels(text = j_tent_root$node.label[low_support_nodes],
node = low_support_nodes + Ntip(j_tent_root),
cex = 0.5,
frame = 'n',
adj = c(1, -1))
plot(j_tent_root, cex = 0.5, use.edge.length = F, node.depth = 2)
low_support_nodes = which(as.numeric(j_tent_root$node.label) < 100)
nodelabels(text = j_tent_root$node.label[low_support_nodes],
node = low_support_nodes + Ntip(j_tent_root),
cex = 0.5,
frame = 'n',
adj = c(1, -0.8))
plot(j_tent_root, cex = 0.5, use.edge.length = F, node.depth = 2)
low_support_nodes = which(as.numeric(j_tent_root$node.label) < 100)
nodelabels(text = j_tent_root$node.label[low_support_nodes],
node = low_support_nodes + Ntip(j_tent_root),
cex = 0.5,
frame = 'n',
adj = c(1, -0.5))
data(anoletree)
x <- getStates(anoletree)
anole_tree <- anoletree
anole_tree
plot.phylo(anole_tree)
plot.phylo(anole_tree, type = 'fan')
plot.phylo(anole_tree, type = 'fan', edge.color = 'black', cex = 0.6)
col <- set.Names(palette()[1:length(unique(x))], sort(unique(x)))
col <- setNames(palette()[1:length(unique(x))], sort(unique(x)))
x
tiplabels(pie = to.matrix(x, sort(unique(x))))
to.matrix(x, sort(unique(x)))
tiplabels(pie = to.matrix(x, sort(unique(x))), piecol = cols, cex = 0.6)
tiplabels(pie = to.matrix(x, sort(unique(x))), piecol = col, cex = 0.6)
plot.phylo(anole_tree, type = 'fan', edge.color = 'black', cex = 0.6)
col <- setNames(palette()[1:length(unique(x))], sort(unique(x)))
x
tiplabels(pie = to.matrix(x, sort(unique(x))), piecol = col, cex = 0.6)
col
fitER <- ace(x, anole_tree, model = "ER", type = "discrete")
data(anoletree)
x <- getStates(anoletree)
anole_tree <- anoletree
rm(anoletree)
anole_tree
plot.phylo(anole_tree, type = 'fan', edge.color = 'black', cex = 0.6)
col <- setNames(palette()[1:length(unique(x))], sort(unique(x)))
x
tiplabels(pie = to.matrix(x, sort(unique(x))), piecol = col, cex = 0.6)
#analysis
fitER <- ace(x, anole_tree, model = "ER", type = "discrete")
anole_tree
x
col
to.matrix(x, sort(unique(x)))
#analysis -- doesn't work
fitER <- ace(x, anole_tree, model = "ER", type = "discrete")
data(anoletree)
x <- getStates(anoletree)
x
anole_tree <- anoletree
rm(anoletree)
anole_tree
plot.phylo(anole_tree, type = 'fan', edge.color = 'black', cex = 0.6)
col <- setNames(palette()[1:length(unique(x))], sort(unique(x)))
x
tiplabels(pie = to.matrix(x, sort(unique(x))), piecol = col, cex = 0.6)
#analysis -- doesn't work
fitER <- ace(x, anole_tree, model = "ER", type = "discrete")
fitER <- ace(x, anole_tree, method = "ER", type = "discrete")
fitER <- ace(x, anole_tree, model = "ER", type = "discrete")
fitER <- ace(x, anole_tree, model = "ER", type = "discrete")
x <- getStates(anoletree, 'tips')
data(anoletree)
x <- getStates(anoletree, 'tips')
anole_tree <- anoletree
rm(anoletree)
anole_tree
plot.phylo(anole_tree, type = 'fan', edge.color = 'black', cex = 0.6)
col <- setNames(palette()[1:length(unique(x))], sort(unique(x)))
x
tiplabels(pie = to.matrix(x, sort(unique(x))), piecol = col, cex = 0.6)
#analysis -- doesn't work
fitER <- ace(x, anole_tree, model = "ER", type = "discrete")
anc_lik_rounded <- round(fitER$lik.anc, 3)
nodelabels(node = 1: anole_tree$Nnode + Ntip(anole_tree), pie = anc_lik_rounded, piecol = col , cex = 0.4   )
anole_tree$Nnode
Ntip(anole_tree)
1:anole_tree$Nnode
plot.phylo(anole_tree, type = 'fan', edge.color = 'black', cex = 0.6)
col <- setNames(palette()[1:length(unique(x))], sort(unique(x)))
x
tiplabels(pie = to.matrix(x, sort(unique(x))), piecol = col, cex = 0.6)
#analysis -- doesn't work
fitER <- ace(x, anole_tree, model = "ER", type = "discrete")
anc_lik_rounded <- round(fitER$lik.anc, 3)
nodelabels(node = 1:anole_tree$Nnode + Ntip(anole_tree), pie = anc_lik_rounded, piecol = col , cex = 0.4   )
anole_tree$Nnode
pwd()
setwd("~/Documents/RDI")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if(length(new.pkg)) install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("ggplot2", "twitteR", 'ROAuth', 'RCurl', "stringr", 'wordcloud')
ipak(packages)
install.packages('wordcloud')
packages <- c("ggplot2", "twitteR", 'ROAuth', 'RCurl', "stringr")
ipak(packages)
setwd("~/Documents/RDI")
kk <- read.table('keys.rtf')
kk <- read.csv('keys.rtf')
View(kk)
Lines <- readLines("keys.rtf")
read.table('keys.txt')
read.table('keys.txt')
ks = read.table('keys.txt')
require(RCurl)
require(XML)
# lnk <- "https://www.google.com/search?q=should+I+buy+stock+in+aapl&oq=shoul&aqs=chrome.1.69i57j69i59j69i61j69i59.1951j0j4&sourceid=chrome&es_sm=91&ie=UTF-8"
lnk <- "http://finance.yahoo.com/q/h?s=aapl"
webpage <- getURL(lnk)
webpage <- readLines(tc <- textConnection(webpage)); close(tc)
pagetree <- htmlTreeParse(webpage, error=function(...){}, useInternalNodes = TRUE)
# parse the tree by tables
x <- xpathSApply(pagetree, "//*/table", xmlValue)
# do some clean up with regular expressions
x <- unlist(strsplit(x, "\n"))
x <- gsub("\t","     ",x)
x <- sub("^[[:space:]]*(.*?)[[:space:]]*$", "\\1", x, perl=TRUE)
x <- x[!(x %in% c("", "|"))]
x
require(RCurl)
#install.packages("XML")
require(XML)
require(ggplot2)
stockPlotter <- function(link){
## download data
myTemp <- getURL(link)
stock <- read.table(textConnection(myTemp), header=T, sep=",", skip=0)
closeAllConnections() ## closes the connection with the website
stock$Date <- as.Date(stock$Date)
stk <- gsub(pattern="[^A-Z]", replacement="", x=link)
## plot stock
ggplot(stock, aes(x = Date, y = High)) +
geom_line(color = "red", alpha = 0.5) +
geom_line(aes(y=Low), color = 'blue', alpha = 0.5)+
theme_bw() +
ggtitle(label=stk)
}
## links for stock data -- find historic data here: http://finance.yahoo.com/q/hp?s=GOOG
links <- list()
links[1] <- "http://ichart.finance.yahoo.com/table.csv?s=AAPL&d=4&e=3&f=2014&g=d&a=11&b=12&c=1980&ignore=.csv"
links[2] <- "http://ichart.finance.yahoo.com/table.csv?s=GOOG&d=4&e=3&f=2014&g=d&a=2&b=27&c=2014&ignore=.csv"
links[3] <- "http://ichart.finance.yahoo.com/table.csv?s=YHOO&d=4&e=3&f=2014&g=d&a=3&b=12&c=1996&ignore=.csv"
links[4] <- "http://ichart.finance.yahoo.com/table.csv?s=ORCL&d=4&e=3&f=2014&g=d&a=2&b=12&c=1986&ignore=.csv"
links[5] <- "http://ichart.finance.yahoo.com/table.csv?s=FB&d=4&e=3&f=2014&g=d&a=4&b=18&c=2012&ignore=.csv"
links[6] <- "http://ichart.finance.yahoo.com/table.csv?s=NFLX&d=4&e=3&f=2014&g=d&a=4&b=23&c=2002&ignore=.csv"
links[7] <- "http://ichart.finance.yahoo.com/table.csv?s=AMZN&d=4&e=3&f=2014&g=d&a=4&b=16&c=1997&ignore=.csv"
links[8] <- "http://ichart.finance.yahoo.com/table.csv?s=MSFT&d=4&e=3&f=2014&g=d&a=2&b=13&c=1986&ignore=.csv"
links[9] <- "http://ichart.finance.yahoo.com/table.csv?s=TSLA&d=4&e=13&f=2014&g=d&a=5&b=29&c=2010&ignore=.csv"
links[10] <- "http://ichart.finance.yahoo.com/table.csv?s=SCTY&d=4&e=13&f=2014&g=d&a=11&b=13&c=2012&ignore=.csv"
links[11] <- "http://ichart.finance.yahoo.com/table.csv?s=F&d=4&e=13&f=2014&g=d&a=5&b=1&c=1972&ignore=.csv"
links[12] <- "http://ichart.finance.yahoo.com/table.csv?s=ASX&d=4&e=13&f=2014&g=d&a=9&b=2&c=2000&ignore=.csv"
i <- 1
stockPlotter(links[i])
i <- i + 1
stockPlotter(links[i])
i <- i + 1
stockPlotter(links[i])
i <- i + 1
stockPlotter(links[i])
i <- i + 1
stockPlotter(links[i])
i <- i + 1
stockPlotter(links[i])
i <- i + 1
stockPlotter(links[i])
i <- i + 1
stockPlotter(links[i])
i <- i + 1
stockPlotter(links[i])
i <- i + 1
stockPlotter(links[i])
i <- i + 1
stockPlotter(links[i])
i <- i + 1
stockPlotter(links[i])
i <- i + 1
require(RCurl)
require(XML)
# lnk <- "https://www.google.com/search?q=should+I+buy+stock+in+aapl&oq=shoul&aqs=chrome.1.69i57j69i59j69i61j69i59.1951j0j4&sourceid=chrome&es_sm=91&ie=UTF-8"
lnk <- "http://finance.yahoo.com/q/h?s=aapl"
lnk <- "http://finance.yahoo.com/quote/AAPL?p=AAPL"
webpage <- getURL(lnk)
webpage <- readLines(tc <- textConnection(webpage)); close(tc)
pagetree <- htmlTreeParse(webpage, error=function(...){}, useInternalNodes = TRUE)
# parse the tree by tables
x <- xpathSApply(pagetree, "//*/table", xmlValue)
# do some clean up with regular expressions
x <- unlist(strsplit(x, "\n"))
x <- gsub("\t","     ",x)
x <- sub("^[[:space:]]*(.*?)[[:space:]]*$", "\\1", x, perl=TRUE)
x <- x[!(x %in% c("", "|"))]
x
headlines <- x[2]
headlines
## search headlines for positive words
headlines <- tolower(headlines)
posWord <- c("[uU][pP]", "[wW]in")
gsub(pattern=" up ", replacement="", x=headlines)
pmatch("no", headlines)
#install.packages("tm")
library(tm) #load text mining library
library(tm) #load text mining library
install.packages("tm",dependencies=TRUE)
library(tm) #load text mining library
install.packages("slam")
library(tm) #load text mining library
citation()
version()
version
